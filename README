    用户排名：
    两个数据表：
        UserRank
        UserCount
    
    useRank.sql 数据库脚本 建立两个表格
    initRank.py 当数据库已经有用户得分数据 但是没有统计数量数据的时候调用脚本
    UserRank.py 实际操作的函数
    flaskEntery.py web接口
    TestRank.py 测试web接口的脚本
    
    最好将排名做成一个单独的web服务，防止多个进程同时修改UserCount 数据表造成数据混乱



接口样例：
    得到前50名 getRange?start=0&end=50  返回[{uid:, score:}]
    显示相邻的10名  
        首先根据自己得分得到自己的排名 getRank?score=50
        得到前一位排名 到后8位排名的用户(可能存在相同积分，相同排名的用户)  getRange?start=xxx&end=xxx

    更改积分书信排名:
        updateScore?uid=%d&newScore=%d
        该接口自动更新用户的数据库积分
